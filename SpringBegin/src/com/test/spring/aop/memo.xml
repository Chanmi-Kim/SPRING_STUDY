<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd">
	
	<!-- memo.xml -->
	
	<!-- 주업무 객체 -->
	<bean id="memo" class="com.test.spring.aop.Memo"></bean>
	
	<!-- 보조업무 객체 -->
	<bean id="logger" class="com.test.spring.aop.Logger"></bean>
	<bean id="auth" class="com.test.spring.aop.Auth"></bean>
	
	
	
	<!--  
		Spring AOP 설정 태그
		- 주 업무 + 보조 업무의 관계를 맺어주는 역할
	-->
	<aop:config>
	
		<!-- 관계 설정 : 보조 업무 객체를 지정한다. -->
		<aop:aspect id="loggerAdvice" ref="logger">
			
			<!-- 
				주 업무를 지정한다. 
				: 주업무 객체의 어떤 메소드를 지정할 것인지 선택(memo.add()) 
				주업무의 특정 메소드(Point Cut)를 참조
			-->
			<!-- 포인트컷을 지정한다. -->
			<!--  
				expression : 주업무의 메소드를 지정하는 표현식(AspectJ 표현식을 사용한다.)
			-->
			<aop:pointcut expression="execution(public void com.test.spring.aop.Memo.add(String))" id="m1"></aop:pointcut>
			<aop:pointcut expression="execution(public void com.test.spring.aop.Memo.*(..))" id="m2"></aop:pointcut>
			<aop:pointcut expression="execution(public int com.test.spring.aop.Memo.search(String))" id="m3"></aop:pointcut>
			
			<!-- 보조업무 객체의 특정 메소드 + 주업무 객체의 특정 메소드(포인트컷) = 연결 -->
			<aop:around method="around" pointcut-ref="m1" />
			<aop:before method="before" pointcut-ref="m2" />
			<aop:after method="after" pointcut-ref="m2" />
			<aop:after-throwing method="afterthrowing" pointcut-ref="m2" throwing="e" />
			<aop:after-returning method="afterreturning" pointcut-ref="m3" returning="obj" />
			
			
			
		</aop:aspect>
	
	</aop:config>
	

</beans>











